{
	"info": {
		"_postman_id": "493bbffd-852a-472c-bcad-a232a6f46e72",
		"name": "Messaging system",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "messages",
			"item": [
				{
					"name": "all",
					"item": [
						{
							"name": "Return all messages",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/messages",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"messages"
									]
								},
								"description": "if query string is empty. Request will return all messages"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "filter_by",
					"item": [
						{
							"name": "Return user's all messages",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/messages?recipient=2",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"messages"
									],
									"query": [
										{
											"key": "recipient",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Return empty by non existing user",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/messages?recipient=2000000001",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"messages"
									],
									"query": [
										{
											"key": "recipient",
											"value": "2000000001"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Return user's unread messages",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/messages?recipient=2&is_read=0",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"messages"
									],
									"query": [
										{
											"key": "recipient",
											"value": "2"
										},
										{
											"key": "is_read",
											"value": "0"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "get_specific",
					"item": [
						{
							"name": "Return specific message",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/messages/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"messages",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Return 404",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/messages/50000001",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"messages",
										"50000001"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "new_message",
					"item": [
						{
							"name": "Create a new message",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"subject\": \"Create a message via Postman\",\n\t\"body\": \"In order to test using Postman\",\n\t\"owner\": 3,\n\t\"recipient\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/messages",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a new message missing fields",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"subject\": \"Create a message via Postman\",\n\t\"owner\": 3\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/messages",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a new message non existing owner",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"subject\": \"Create a message via Postman\",\n\t\"body\": \"In order to test using Postman\",\n\t\"owner\": 30000546,\n\t\"recipient\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/messages",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a new message non existing recipient",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"subject\": \"Create a message via Postman\",\n\t\"body\": \"In order to test using Postman\",\n\t\"recipient\": 30000546,\n\t\"owner\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/messages",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "delete_message",
					"item": [
						{
							"name": "Delete a message by its id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/api/messages/7",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"messages",
										"7"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a message by its non existing id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/api/messages/1004156464516",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"messages",
										"1004156464516"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "users",
			"item": [
				{
					"name": "all_messages",
					"item": [
						{
							"name": "Get messages via user",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/users/1/messages",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"1",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get messages via user with query",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/users/1/messages?is_read=0",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"1",
										"messages"
									],
									"query": [
										{
											"key": "is_read",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get messages via user with query plus recipient",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/users/1/messages?is_read=0&recipient=2",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"1",
										"messages"
									],
									"query": [
										{
											"key": "is_read",
											"value": "0"
										},
										{
											"key": "recipient",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get messages via non existing user",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/users/100012165/messages",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"100012165",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get message of the user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/users/1/messages/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"1",
								"messages",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Message is missing for the user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/users/1/messages/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"1",
								"messages",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "loggedin",
			"item": [
				{
					"name": "Get messages of logged in user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31c89f56-e5ad-44b1-92aa-e1d8d81277f5",
								"exec": [
									"const payload = pm.response.json();\r",
									"pm.collectionVariables.set('token', payload.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"janedoe@test.com\",\n\t\"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Return messages of loggedin user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b5ddb23d-8f46-4a15-b819-6cc31892a2ad",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/messages",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"messages"
							]
						},
						"description": "In order to check loagged in user messages, run first login url"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f11b952d-3a0e-4eac-8875-a556466397b3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "cb1228cc-9e2a-48a3-84fb-f935cb9bcd05",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "74ac95e4-af99-4d86-a41a-96d99a3b515a",
			"key": "furl",
			"value": "http://localhost:5000",
			"type": "string"
		},
		{
			"id": "cbe7f5d0-2228-4935-8c53-91017442eb0c",
			"key": "url",
			"value": "https://polar-brushlands-03833.herokuapp.com/",
			"type": "string"
		},
		{
			"id": "91e4065b-4011-410a-93ec-fda0481c0adf",
			"key": "gurl",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"id": "8af9ccad-150a-47a5-865a-4e3ac60f508a",
			"key": "token",
			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1OTEyNzc0MzksIm5iZiI6MTU5MTI3NzQzOSwianRpIjoiYmNhM2FkMzktZDFkZS00ZmJmLThhMmQtYTBjNTk0NGM1NjQ1IiwiZXhwIjoxNTkxMjc4MzM5LCJpZGVudGl0eSI6MSwiZnJlc2giOmZhbHNlLCJ0eXBlIjoiYWNjZXNzIn0.h46McH2UFdBiKTVYlTFNMC8_ysq9XJhLfHplquuzLJ4",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}